D G "__PCH__" 0 0 ""4.140""
D G "__DEVICE__" 0 0 ""
D G "__DATE__" 0 0 ""17-Feb-20""
D G "__TIME__" 0 0 ""17:04:23""
D G "__18F4410" 0 0 "1" "* File:   main.c"
C G "" 0 1 1 "*"
C G "" 0 1 1 "*"
d G "PIN_A0" 1 24 "31744"
d G "PIN_A1" 1 25 "31745"
d G "PIN_A2" 1 26 "31746"
d G "PIN_A3" 1 27 "31747"
d G "PIN_A4" 1 28 "31748"
d G "PIN_A5" 1 29 "31749"
d G "PIN_A6" 1 30 "31750"
d G "PIN_A7" 1 31 "31751"
d G "PIN_B0" 1 33 "31752"
d G "PIN_B1" 1 34 "31753"
d G "PIN_B2" 1 35 "31754"
d G "PIN_B3" 1 36 "31755"
d G "PIN_B4" 1 37 "31756"
d G "PIN_B5" 1 38 "31757"
d G "PIN_B6" 1 39 "31758"
d G "PIN_B7" 1 40 "31759"
d G "PIN_C0" 1 42 "31760"
d G "PIN_C1" 1 43 "31761"
d G "PIN_C2" 1 44 "31762"
d G "PIN_C3" 1 45 "31763"
d G "PIN_C4" 1 46 "31764"
d G "PIN_C5" 1 47 "31765"
d G "PIN_C6" 1 48 "31766"
d G "PIN_C7" 1 49 "31767"
d G "PIN_D0" 1 51 "31768"
d G "PIN_D1" 1 52 "31769"
d G "PIN_D2" 1 53 "31770"
d G "PIN_D3" 1 54 "31771"
d G "PIN_D4" 1 55 "31772"
d G "PIN_D5" 1 56 "31773"
d G "PIN_D6" 1 57 "31774"
d G "PIN_D7" 1 58 "31775"
d G "PIN_E0" 1 60 "31776"
d G "PIN_E1" 1 61 "31777"
d G "PIN_E2" 1 62 "31778"
d G "PIN_E3" 1 63 "31779"
d G "FALSE" 1 66 "0"
d G "TRUE" 1 67 "1"
d G "BYTE" 1 69 "int8"
d G "BOOLEAN" 1 70 "int1"
d G "getc" 1 72 "getch"
d G "fgetc" 1 73 "getch"
d G "getchar" 1 74 "getch"
d G "putc" 1 75 "putchar"
d G "fputc" 1 76 "putchar"
d G "fgets" 1 77 "gets"
d G "fputs" 1 78 "puts"
d G "WDT_TIMEOUT" 1 83 "7"
d G "MCLR_FROM_SLEEP" 1 84 "11"
d G "MCLR_FROM_RUN" 1 85 "15"
d G "NORMAL_POWER_UP" 1 86 "12"
d G "BROWNOUT_RESTART" 1 87 "14"
d G "WDT_FROM_SLEEP" 1 88 "3"
d G "RESET_INSTRUCTION" 1 89 "0"
d G "SLEEP_FULL" 1 92 "0" "Default"
d G "SLEEP_IDLE" 1 93 "1" "Clock and peripherals don't stop"
d G "T0_INTERNAL" 1 100 "0"
d G "T0_EXT_L_TO_H" 1 101 "32"
d G "T0_EXT_H_TO_L" 1 102 "48"
d G "T0_DIV_1" 1 104 "8"
d G "T0_DIV_2" 1 105 "0"
d G "T0_DIV_4" 1 106 "1"
d G "T0_DIV_8" 1 107 "2"
d G "T0_DIV_16" 1 108 "3"
d G "T0_DIV_32" 1 109 "4"
d G "T0_DIV_64" 1 110 "5"
d G "T0_DIV_128" 1 111 "6"
d G "T0_DIV_256" 1 112 "7"
d G "T0_OFF" 1 114 "0x80"
d G "T0_8_BIT" 1 116 "0x40"
d G "RTCC_INTERNAL" 1 118 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 1 119 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 1 120 "48"
d G "RTCC_DIV_1" 1 121 "8"
d G "RTCC_DIV_2" 1 122 "0"
d G "RTCC_DIV_4" 1 123 "1"
d G "RTCC_DIV_8" 1 124 "2"
d G "RTCC_DIV_16" 1 125 "3"
d G "RTCC_DIV_32" 1 126 "4"
d G "RTCC_DIV_64" 1 127 "5"
d G "RTCC_DIV_128" 1 128 "6"
d G "RTCC_DIV_256" 1 129 "7"
d G "RTCC_OFF" 1 130 "0x80"
d G "RTCC_8_BIT" 1 131 "0x40"
d G "WDT_ON" 1 142 "0x100"
d G "WDT_OFF" 1 143 "0"
d G "T1_DISABLED" 1 149 "0"
d G "T1_INTERNAL" 1 150 "0x85"
d G "T1_EXTERNAL" 1 151 "0x87"
d G "T1_EXTERNAL_SYNC" 1 152 "0x83"
d G "T1_CLK_OUT" 1 154 "8"
d G "T1_DIV_BY_1" 1 156 "0"
d G "T1_DIV_BY_2" 1 157 "0x10"
d G "T1_DIV_BY_4" 1 158 "0x20"
d G "T1_DIV_BY_8" 1 159 "0x30"
d G "T2_DISABLED" 1 164 "0"
d G "T2_DIV_BY_1" 1 165 "4"
d G "T2_DIV_BY_4" 1 166 "5"
d G "T2_DIV_BY_16" 1 167 "6"
d G "T3_DISABLED" 1 173 "0"
d G "T3_INTERNAL" 1 174 "0x85"
d G "T3_EXTERNAL" 1 175 "0x87"
d G "T3_EXTERNAL_SYNC" 1 176 "0x83"
d G "T3_DIV_BY_1" 1 178 "0"
d G "T3_DIV_BY_2" 1 179 "0x10"
d G "T3_DIV_BY_4" 1 180 "0x20"
d G "T3_DIV_BY_8" 1 181 "0x30"
d G "CCP_OFF" 1 187 "0"
d G "CCP_CAPTURE_FE" 1 188 "4"
d G "CCP_CAPTURE_RE" 1 189 "5"
d G "CCP_CAPTURE_DIV_4" 1 190 "6"
d G "CCP_CAPTURE_DIV_16" 1 191 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 1 192 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 1 193 "9"
d G "CCP_COMPARE_INT" 1 194 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 1 195 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 1 196 "0xB"
d G "CCP_PWM" 1 197 "0xC"
d G "CCP_PWM_PLUS_1" 1 198 "0x1c"
d G "CCP_PWM_PLUS_2" 1 199 "0x2c"
d G "CCP_PWM_PLUS_3" 1 200 "0x3c"
d G "T3_CCP1_TO_2" 1 206 "0x48"
d G "T3_CCP2" 1 207 "0x8"
d G "CCP_PWM_H_H" 1 210 "0x0c"
d G "CCP_PWM_H_L" 1 211 "0x0d"
d G "CCP_PWM_L_H" 1 212 "0x0e"
d G "CCP_PWM_L_L" 1 213 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 1 215 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 1 216 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 1 217 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 1 219 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 1 220 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 1 221 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 1 222 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 1 223 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 1 224 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 1 225 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 1 227 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 1 228 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 1 229 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 1 231 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 1 232 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 1 233 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 1 235 "0x80000000"
d G "PSP_ENABLED" 1 245 "0x10"
d G "PSP_DISABLED" 1 246 "0"
d G "SPI_DISABLED" 1 253 "0x00"
d G "SPI_MASTER" 1 254 "0x20"
d G "SPI_SLAVE" 1 255 "0x24"
d G "SPI_SCK_IDLE_HIGH" 1 256 "0x10"
d G "SPI_SCK_IDLE_LOW" 1 257 "0x00"
d G "SPI_CLK_DIV_4" 1 258 "0x00"
d G "SPI_CLK_DIV_16" 1 259 "0x01"
d G "SPI_CLK_DIV_64" 1 260 "0x02"
d G "SPI_CLK_T2" 1 261 "0x03"
d G "SPI_SS_DISABLED" 1 262 "0x01"
d G "SPI_XMIT_L_TO_H" 1 264 "0x4000"
d G "SPI_XMIT_H_TO_L" 1 265 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 1 267 "0x0000"
d G "SPI_SAMPLE_AT_END" 1 268 "0x8000"
d G "SPI_L_TO_H" 1 271 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 1 272 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 1 278 "2"
d G "UART_DATA" 1 279 "4"
d G "UART_AUTODETECT" 1 280 "8"
d G "UART_AUTODETECT_NOWAIT" 1 281 "9"
d G "UART_WAKEUP_ON_RDA" 1 282 "10"
d G "UART_SEND_BREAK" 1 283 "13"
d G "A0_A3_A1_A3" 1 287 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 1 288 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 1 289 "0xbcf05"
d G "NC_NC_NC_NC" 1 290 "0x0ff07"
d G "A0_A3_A1_A2" 1 291 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 1 292 "0x9ef01"
d G "A0_VR_A1_VR" 1 293 "0x3ff06"
d G "A3_VR_A2_VR" 1 294 "0xcff0e"
d G "CP1_INVERT" 1 295 "0x0000010"
d G "CP2_INVERT" 1 296 "0x0000020"
d G "VREF_LOW" 1 304 "0xa0"
d G "VREF_HIGH" 1 305 "0x80"
d G "VREF_F5" 1 307 "0x40"
d G "VREF_COMP" 1 308 "0x10"
d G "LVD_LVDIN" 1 313 "0x1F"
d G "LVD_45" 1 314 "0x1E"
d G "LVD_42" 1 315 "0x1D"
d G "LVD_40" 1 316 "0x1C"
d G "LVD_38" 1 317 "0x1B"
d G "LVD_36" 1 318 "0x1A"
d G "LVD_35" 1 319 "0x19"
d G "LVD_33" 1 320 "0x18"
d G "LVD_30" 1 321 "0x17"
d G "LVD_28" 1 322 "0x16"
d G "LVD_27" 1 323 "0x15"
d G "LVD_25" 1 324 "0x14"
d G "LVD_24" 1 325 "0x13"
d G "LVD_23" 1 326 "0x12"
d G "LVD_22" 1 327 "0x11"
d G "LVD_21" 1 328 "0x10"
d G "LVD_TRIGGER_BELOW" 1 330 "0"
d G "LVD_TRIGGER_ABOVE" 1 331 "0x80"
d G "OSC_31KHZ" 1 337 "0"
d G "OSC_125KHZ" 1 338 "0x10"
d G "OSC_250KHZ" 1 339 "0x20"
d G "OSC_500KHZ" 1 340 "0x30"
d G "OSC_1MHZ" 1 341 "0x40"
d G "OSC_2MHZ" 1 342 "0x50"
d G "OSC_4MHZ" 1 343 "0x60"
d G "OSC_8MHZ" 1 344 "0x70"
d G "OSC_16MHZ" 1 345 "0x4060"
d G "OSC_32MHZ" 1 346 "0x4070"
d G "OSC_TIMER1" 1 348 "1"
d G "OSC_INTRC" 1 349 "2"
d G "OSC_NORMAL" 1 350 "0"
d G "OSC_IDLE_MODE" 1 352 "0x80"
d G "OSC_31250" 1 353 "0x8000"
d G "OSC_PLL_ON" 1 354 "0x4000"
d G "OSC_PLL_OFF" 1 355 "0"
d G "OSC_STATE_STABLE" 1 359 "4"
d G "OSC_STATE_EXT_RUNNING" 1 360 "8"
d G "ADC_OFF" 1 367 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 1 368 "0x100"
d G "ADC_CLOCK_DIV_4" 1 369 "0x04"
d G "ADC_CLOCK_DIV_8" 1 370 "0x01"
d G "ADC_CLOCK_DIV_16" 1 371 "0x05"
d G "ADC_CLOCK_DIV_32" 1 372 "0x02"
d G "ADC_CLOCK_DIV_64" 1 373 "0x06"
d G "ADC_CLOCK_INTERNAL" 1 374 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 1 376 "0x00"
d G "ADC_TAD_MUL_2" 1 377 "0x08"
d G "ADC_TAD_MUL_4" 1 378 "0x10"
d G "ADC_TAD_MUL_6" 1 379 "0x18"
d G "ADC_TAD_MUL_8" 1 380 "0x20"
d G "ADC_TAD_MUL_12" 1 381 "0x28"
d G "ADC_TAD_MUL_16" 1 382 "0x30"
d G "ADC_TAD_MUL_20" 1 383 "0x38"
d G "NO_ANALOGS" 1 387 "0x0F" "None"
d G "ALL_ANALOG" 1 388 "0x00" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4 B0"
d G "AN0_TO_AN11" 1 389 "0x03" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1 B4"
d G "AN0_TO_AN10" 1 390 "0x04" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3 B1"
d G "AN0_TO_AN9" 1 391 "0x05" "A0 A1 A2 A3 A5 E0 E1 E2 B2 B3"
d G "AN0_TO_AN8" 1 392 "0x06" "A0 A1 A2 A3 A5 E0 E1 E2 B2"
d G "AN0_TO_AN7" 1 393 "0x07" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_TO_AN6" 1 394 "0x08" "A0 A1 A2 A3 A5 E0 E1"
d G "AN0_TO_AN5" 1 395 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_TO_AN4" 1 396 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 1 397 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 1 398 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 1 399 "0x0D" "A0 A1"
d G "AN0" 1 400 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 1 401 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 1 402 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 1 403 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 1 404 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN7_ANALOG" 1 405 "0x07" "!old only provided for compatibility"
d G "AN0_TO_AN6_ANALOG" 1 406 "0x08" "!old only provided for compatibility"
d G "AN0_TO_AN5_ANALOG" 1 407 "0x09" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 1 408 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 1 409 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 1 410 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 1 411 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 1 412 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 1 415 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 1 416 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 1 417 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 1 418 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 1 421 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 1 422 "1"
d G "ADC_READ_ONLY" 1 423 "6"
d G "L_TO_H" 1 431 "0x40"
d G "H_TO_L" 1 432 "0"
d G "GLOBAL" 1 434 "0xF2C0"
d G "PERIPH" 1 435 "0xF240"
d G "INT_RTCC" 1 436 "0x00F220"
d G "INT_TIMER0" 1 437 "0x00F220"
d G "INT_TIMER1" 1 438 "0x009D01"
d G "INT_TIMER2" 1 439 "0x009D02"
d G "INT_TIMER3" 1 440 "0x00A002"
d G "INT_EXT_L2H" 1 441 "0x5000F210"
d G "INT_EXT_H2L" 1 442 "0x6000F210"
d G "INT_EXT" 1 443 "0x00F210"
d G "INT_EXT1_L2H" 1 444 "0x5001F008"
d G "INT_EXT1_H2L" 1 445 "0x6001F008"
d G "INT_EXT1" 1 446 "0x00F008"
d G "INT_EXT2_L2H" 1 447 "0x5002F010"
d G "INT_EXT2_H2L" 1 448 "0x6002F010"
d G "INT_EXT2" 1 449 "0x00F010"
d G "INT_RB" 1 450 "0x00FFF208"
d G "INT_PSP" 1 451 "0x009D80"
d G "INT_AD" 1 452 "0x009D40"
d G "INT_RDA" 1 453 "0x009D20"
d G "INT_TBE" 1 454 "0x009D10"
d G "INT_SSP" 1 455 "0x009D08"
d G "INT_CCP1" 1 456 "0x009D04"
d G "INT_CCP2" 1 457 "0x00A001"
d G "INT_BUSCOL" 1 458 "0x00A008"
d G "INT_LOWVOLT" 1 459 "0x00A004"
d G "INT_COMP" 1 460 "0x00A040"
d G "INT_OSCF" 1 461 "0x00A080"
D G "_STDIO" 2 12 ""
D G "_STRING" 3 12 ""
D G "_STDDEF" 4 13 ""
D G "ptrdiff_t" 4 18 "unsigned int16"
D G "size_t" 4 24 "unsigned int16"
D G "wchar_t" 4 26 "char"
D G "NULL" 4 27 "0"
D G "offsetof" 4 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 5 12 ""
D G "islower" 5 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 5 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 5 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 5 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 5 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 5 19 "(x)  ((x)==' ')"
D G "isxdigit" 5 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 5 21 "(x)  ((x)<' ')"
D G "isprint" 5 22 "(x)  ((x)>=' ')"
D G "isgraph" 5 23 "(x)  ((x)>' ')"
D G "ispunct" 5 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 3 19 10 "FUNCTION"
V L "s1" 3 34 "*int8"
V L "s2" 3 34 "*int8"
V L "n" 3 34 "int16"
F G "memmove" 3 34 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "sc1" 3 36 "*int8"
V L "sc2" 3 37 "*int8"
D G "strcopy" 3 54 "strcpy"
C L "strncpy" 3 19 4 "FUNCTION"
V L "s1" 3 61 "*int8"
V L "s2" 3 61 "*int8"
V L "n" 3 61 "int16"
F G "strncpy" 3 61 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 3 63 "*int8"
C L "strcat" 3 19 3 "FUNCTION"
V L "s1" 3 78 "*int8"
V L "s2" 3 78 "*int8"
F G "strcat" 3 78 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 80 "*int8"
C L "strncat" 3 19 2 "FUNCTION"
V L "s1" 3 96 "*int8"
V L "s2" 3 96 "*int8"
V L "n" 3 96 "int16"
F G "strncat" 3 96 "*int8(*int8 s1,*int8 s2,int16 n)"
V L "s" 3 98 "*int8"
C L "memcmp" 3 19 3 "FUNCTION"
V L "s1" 3 120 "*int8"
V L "s2" 3 120 "*int8"
V L "n" 3 120 "int16"
F G "memcmp" 3 120 "sint8(*int8 s1,*int8 s2,int16 n)"
V L "su1" 3 122 "*int8"
V L "su2" 3 122 "*int8"
C L "strcmp" 3 19 2 "FUNCTION"
V L "s1" 3 134 "*int8"
V L "s2" 3 134 "*int8"
F G "strcmp" 3 134 "sint8(*int8 s1,*int8 s2)"
C L "strcoll" 3 19 2 "FUNCTION"
V L "s1" 3 144 "*int8"
V L "s2" 3 144 "*int8"
F G "strcoll" 3 144 "sint8(*int8 s1,*int8 s2)"
C L "strncmp" 3 19 4 "FUNCTION"
V L "s1" 3 157 "*int8"
V L "s2" 3 157 "*int8"
V L "n" 3 157 "int16"
F G "strncmp" 3 157 "sint8(*int8 s1,*int8 s2,int16 n)"
C L "strxfrm" 3 19 3 "FUNCTION"
V L "s1" 3 169 "*int8"
V L "s2" 3 169 "*int8"
V L "n" 3 169 "int16"
F G "strxfrm" 3 169 "int16(*int8 s1,*int8 s2,int16 n)"
V L "s" 3 171 "*int8"
V L "n1" 3 172 "int8"
C L "memchr" 3 19 3 "FUNCTION"
V L "s" 3 191 "*int8"
V L "c" 3 191 "int8"
V L "n" 3 191 "int16"
F G "memchr" 3 191 "*int8(*int8 s,int8 c,int16 n)"
V L "uc" 3 193 "int8"
V L "su" 3 194 "*int8"
C L "strchr" 3 19 2 "FUNCTION"
V L "s" 3 205 "*int8"
V L "c" 3 205 "int8"
F G "strchr" 3 205 "*int8(*int8 s,int8 c)"
C L "strcspn" 3 19 4 "FUNCTION"
V L "s1" 3 217 "*int8"
V L "s2" 3 217 "*int8"
F G "strcspn" 3 217 "int8(*int8 s1,*int8 s2)"
V L "sc1" 3 219 "*int8"
V L "sc2" 3 219 "*int8"
C L "strpbrk" 3 19 4 "FUNCTION"
V L "s1" 3 232 "*int8"
V L "s2" 3 232 "*int8"
F G "strpbrk" 3 232 "*int8(*int8 s1,*int8 s2)"
V L "sc1" 3 234 "*int8"
V L "sc2" 3 234 "*int8"
C L "strrchr" 3 19 2 "FUNCTION"
V L "s" 3 247 "*int8"
V L "c" 3 247 "int8"
F G "strrchr" 3 247 "*int8(*int8 s,int8 c)"
V L "p" 3 249 "*int8"
C L "strspn" 3 19 2 "FUNCTION"
V L "s1" 3 262 "*int8"
V L "s2" 3 262 "*int8"
F G "strspn" 3 262 "int8(*int8 s1,*int8 s2)"
V L "sc1" 3 264 "*int8"
V L "sc2" 3 264 "*int8"
C L "strstr" 3 19 6 "FUNCTION"
V L "s1" 3 281 "*int8"
V L "s2" 3 281 "*int8"
F G "strstr" 3 281 "*int8(*int8 s1,*int8 s2)"
V L "s" 3 283 "*int8"
V L "t" 3 283 "*int8"
C L "strtok" 3 19 13 "FUNCTION"
V L "s1" 3 320 "*int8"
V L "s2" 3 320 "*int8"
F G "strtok" 3 320 "*int8(*int8 s1,*int8 s2)"
V L "beg" 3 322 "*int8"
V L "end" 3 322 "*int8"
V L "save" 3 323 "*int8"
C L "strlen" 3 19 6 "FUNCTION"
V L "s" 3 369 "*int8"
F G "strlen" 3 369 "int8(*int8 s)"
V L "sc" 3 371 "*int8"
C L "stricmp" 3 19 2 "FUNCTION"
V L "s1" 3 380 "*int8"
V L "s2" 3 380 "*int8"
F G "stricmp" 3 380 "sint8(*int8 s1,*int8 s2)"
C L "strlwr" 3 19 3 "FUNCTION"
V L "s" 3 394 "*int8"
F G "strlwr" 3 394 "*int8(*int8 s)"
V L "p" 3 396 "*int8"
C L "strupr" 3 19 3 "FUNCTION"
V L "s" 3 408 "*int8"
F G "strupr" 3 408 "*int8(*int8 s)"
V L "p" 3 410 "*int8"
D G "_STDLIB" 6 12 ""
D G "RAND_MAX" 6 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 6 25 "1"
T G "div_t" 6 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 6 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 4 3 6 "FUNCTION"
C L "atoi" 6 43 2 "FUNCTION"
C L "atoi" 6 46 1 "*"
C L "atoi" 6 46 1 "*"
V L "s" 6 50 "*int8"
F G "atoi" 6 50 "sint8(*int8 s)" "Syntax: signed int32  atoi32(char * s)"
V L "s" 6 58 "*int8"
F G "atoi32" 6 58 "sint32(*int8 s)"
C L "atoi32" 6 46 3 "FUNCTION"
V L "num" 6 79 "sint32"
V L "base" 6 79 "int8"
V L "s" 6 79 "*int8"
F G "itoa" 6 79 "*int8(sint32 num,int8 base,*int8 s)" "Standard template: signed int16  atol(char * s)"
C L "itoa" 6 81 1 "*"
C L "itoa" 6 81 1 "*"
V L "s" 6 85 "*int8"
F G "atol" 6 85 "sint16(*int8 s)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 6 87 1 "*"
C L "atol" 6 87 1 "*"
C L "atol" 6 87 1 "*"
C L "atol" 6 87 1 "*"
V L "s" 6 93 "*int8"
V L "endptr" 6 93 "*int8"
V L "base" 6 93 "sint8"
F G "strtol" 6 93 "sint16(*int8 s,*int8 endptr,sint8 base)" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 6 95 1 "*"
C L "strtol" 6 95 1 "*"
C L "strtol" 6 95 1 "*"
C L "strtol" 6 95 1 "*"
V L "s" 6 101 "*int8"
V L "endptr" 6 101 "*int8"
V L "base" 6 101 "sint8"
F G "strtoul" 6 101 "int16(*int8 s,*int8 endptr,sint8 base)" "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 6 95 2 "FUNCTION"
C L "strtoul" 6 103 1 "*"
C L "strtoul" 6 103 1 "*"
C L "strtoul" 6 103 1 "*"
V L "s" 6 110 "*int8"
V L "endptr" 6 110 "*int8"
F G "strtof" 6 110 "float(*int8 s,*int8 endptr)"
D G "strtof48" 6 116 "(s, e) strtof(s, e)"
D G "strtod" 6 117 "(s, e) strtof(s, e)"
C L "strtof" 6 103 1 "FUNCTION"
C L "strtof" 6 120 1 "*"
D G "atof" 6 124 "(s)   strtof(s, 0)"
C L "strtof" 6 120 1 "FUNCTION"
C L "strtof" 6 143 1 "*"
C L "strtof" 6 143 1 "*"
C L "strtof" 6 143 1 "*"
V L "s" 6 149 "*int8"
F G "atoe" 6 149 "float(*int8 s)"
C L "atoe" 6 143 2 "FUNCTION"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
C L "atoe" 6 160 1 "*"
F G "rand" 6 169 "int16()" "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
C L "rand" 6 171 1 "*"
V L "seed" 6 191 "int32"
F G "srand" 6 191 "void(int32 seed)" "Memory management functions"
C L "srand" 6 171 3 "FUNCTION"
V L "string" 6 205 "*int8"
F G "system" 6 205 "sint8(*int8 string)" "Searching and sorting utilities"
C L "system" 6 171 1 "FUNCTION"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 1 "*"
C L "system" 6 211 4 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
C L "system" 6 229 1 "*"
D G "labs" 6 249 "abs"
V L "numer" 6 251 "sint8"
V L "denom" 6 251 "sint8"
F G "div" 6 251 "div_t(sint8 numer,sint8 denom)"
V L "numer" 6 252 "sint16"
V L "denom" 6 252 "sint16"
F G "ldiv" 6 252 "ldiv_t(sint16 numer,sint16 denom)" "Multibyte character functions"
C L "ldiv" 6 229 4 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
C L "ldiv" 3 2 7 "FUNCTION"
V L "numer" 6 274 "sint8"
V L "denom" 6 274 "sint8"
F G "div" 6 274 "div_t(sint8 numer,sint8 denom)"
V L "val" 6 276 "div_t"
V L "numer" 6 282 "sint16"
V L "denom" 6 282 "sint16"
F G "ldiv" 6 282 "ldiv_t(sint16 numer,sint16 denom)"
V L "val" 6 284 "ldiv_t"
V L "s" 6 361 "*int8"
F G "atoe" 6 361 "float(*int8 s)"
V L "pow10" 6 363 "float"
V L "result" 6 364 "float"
V L "sign" 6 365 "int8"
V L "expsign" 6 366 "int8"
V L "c" 6 367 "int8"
V L "ptr" 6 368 "int8"
V L "i" 6 369 "int8"
V L "exp" 6 370 "float"
V L "expcnt" 6 371 "int8"
C L "atoe" 6 397 1 "FUNCTION"
V L "s" 6 429 "*int8"
F G "atoi" 6 429 "sint8(*int8 s)"
V L "result" 6 431 "sint8"
V L "sign" 6 432 "int8"
V L "base" 6 432 "int8"
V L "index" 6 432 "int8"
V L "c" 6 433 "int8"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
C L "atoi" 6 397 1 "FUNCTION"
V L "s" 6 498 "*int8"
F G "atol" 6 498 "sint16(*int8 s)"
V L "result" 6 500 "sint16"
V L "sign" 6 501 "int8"
V L "base" 6 501 "int8"
V L "index" 6 501 "int8"
V L "c" 6 502 "int8"
C L "atol" 6 397 1 "FUNCTION"
C L "atol" 6 397 1 "FUNCTION"
C L "atol" 6 397 1 "FUNCTION"
C L "atol" 6 397 1 "FUNCTION"
C L "mult_with10" 6 397 1 "FUNCTION"
V L "num" 6 565 "int32"
F G "mult_with10" 6 565 "sint32(int32 num)"
V L "s" 6 571 "*int8"
F G "atoi32" 6 571 "sint32(*int8 s)"
V L "result" 6 573 "sint32"
V L "sign" 6 574 "int8"
V L "base" 6 574 "int8"
V L "index" 6 574 "int8"
V L "c" 6 575 "int8"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
C L "atoi32" 6 397 1 "FUNCTION"
V L "num" 6 770 "sint32"
V L "base" 6 770 "int8"
V L "s" 6 770 "*int8"
F G "itoa" 6 770 "*int8(sint32 num,int8 base,*int8 s)"
V L "temp" 6 772 "int32"
V L "i" 6 773 "int8"
V L "sign" 6 773 "int8"
V L "cnt" 6 773 "int8"
V L "c" 6 774 "int8"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
C L "itoa" 6 397 1 "FUNCTION"
V L "s" 6 885 "*int8"
V L "endptr" 6 885 "*int8"
F G "strtof" 6 885 "float(*int8 s,*int8 endptr)"
V L "pow10" 6 887 "float"
V L "result" 6 888 "float"
V L "skip" 6 889 "int1"
V L "sign" 6 889 "int1"
V L "point" 6 889 "int1"
V L "c" 6 890 "int8"
V L "ptr" 6 891 "int8"
V L "s" 6 1103 "*int8"
V L "endptr" 6 1103 "*int8"
V L "base" 6 1103 "sint8"
F G "strtoul" 6 1103 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 6 1105 "*int8"
V L "s1" 6 1105 "*int8"
V L "sd" 6 1105 "*int8"
V L "x" 6 1106 "int16"
V L "sign" 6 1107 "int8"
V L "digits" 6 1108 "int8[1]"
C L "strtoul" 6 397 1 "FUNCTION"
C L "strtoul" 6 397 1 "FUNCTION"
C L "strtoul" 6 397 1 "FUNCTION"
V L "s" 6 1165 "*int8"
V L "endptr" 6 1165 "*int8"
V L "base" 6 1165 "sint8"
F G "strtol" 6 1165 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "sc" 6 1167 "*int8"
V L "s1" 6 1167 "*int8"
V L "sd" 6 1167 "*int8"
V L "x" 6 1168 "sint16"
V L "sign" 6 1169 "int8"
V L "digits" 6 1170 "int8[1]"
C L "strtol" 6 397 1 "FUNCTION"
C L "strtol" 6 397 1 "FUNCTION"
C L "strtol" 6 397 1 "FUNCTION"
V L "string" 6 1228 "*int8"
F G "system" 6 1228 "sint8(*int8 string)"
V L "s" 6 1233 "*int8"
V L "n" 6 1233 "int16"
F G "mblen" 6 1233 "int8(*int8 s,int16 n)"
V L "pwc" 6 1238 "*int8"
V L "s" 6 1238 "*int8"
V L "n" 6 1238 "int16"
F G "mbtowc" 6 1238 "int8(*int8 pwc,*int8 s,int16 n)"
V L "s" 6 1244 "*int8"
V L "wchar" 6 1244 "int8"
F G "wctomb" 6 1244 "int8(*int8 s,int8 wchar)"
V L "pwcs" 6 1250 "*int8"
V L "s" 6 1250 "*int8"
V L "n" 6 1250 "int16"
F G "mbstowcs" 6 1250 "int16(*int8 pwcs,*int8 s,int16 n)"
V L "s" 6 1256 "*int8"
V L "pwcs" 6 1256 "*int8"
V L "n" 6 1256 "int16"
F G "wcstombs" 6 1256 "int16(*int8 s,*int8 pwcs,int16 n)"
V G "_Randseed" 6 1266 "int32"
F G "rand" 6 1268 "int16()"
V L "seed" 6 1274 "int32"
F G "srand" 6 1274 "void(int32 seed)"
V L "p1" 6 1284 "*int8"
V L "p2" 6 1284 "*int8"
T G "*_Cmpfun" 6 1284 "sint8(*int8 p1,*int8 p2)"
V L "qdata" 6 1291 "*int8"
V L "qitems" 6 1291 "int8"
V L "qsize" 6 1291 "int8"
V L "cmp" 6 1291 "_Cmpfun"
F G "qsort" 6 1291 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "m" 6 1292 "int8"
V L "j" 6 1292 "int8"
V L "i" 6 1292 "int8"
V L "l" 6 1292 "int8"
V L "done" 6 1293 "int1"
V L "t" 6 1294 "int8[16]"
V L "key" 6 1319 "*int8"
V L "base" 6 1319 "*int8"
V L "num" 6 1319 "int16"
V L "width" 6 1319 "int16"
V L "cmp" 6 1319 "_Cmpfun"
F G "bsearch" 6 1319 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)"
V L "p" 6 1321 "*int8"
V L "q" 6 1321 "*int8"
V L "n" 6 1322 "int16"
V L "pivot" 6 1323 "int16"
V L "val" 6 1324 "sint8"
C L "bsearch" 6 397 1 "FUNCTION"
D G "HIGH" 7 14 "1"
D G "LOW" 7 15 "0"
D G "RFID_MODE" 7 17 "'1'"
D G "H_W_MODE" 7 18 "'0'"
D G "isRFID" 7 19 "!input(PIN_C0)"
T G "uint8_t" 7 21 "int8"
T G "uint16_t" 7 22 "int16"
T G "uint32_t" 7 23 "int32"
T G "sint8_t" 7 24 "sint8"
T G "sint16_t" 7 25 "sint16"
T G "sint32_t" 7 26 "sint32"
F G "setUp" 7 30 "void()"
C L "setUp" 7 9 3 "FUNCTION"
C G "" 8 1 1 "*"
C G "" 8 1 1 "*"
D G "WEIGHT_H" 8 9 ""
D G "ADSK_high" 8 11 "output_high(PIN_C4)"
D G "ADSK_low" 8 12 "output_low(PIN_C4)"
D G "EQUAL_TO_5KG" 8 13 "3" "3  //into change 110=5kg or 1kg=22 point//"
D G "EQUAL_TO_3KG" 8 14 "66"
D G "TOTAL_READING" 8 15 "100" "100"
V G "g_rawData" 8 18 "uint32_t"
V G "calibratedWeight" 8 19 "uint32_t"
V G "arr_stab" 8 20 "uint32_t[71]"
V G "new_val" 8 21 "uint32_t"
V G "pre_val" 8 22 "uint32_t"
V G "dif_val" 8 23 "uint16_t"
V G "units" 8 24 "uint8_t"
V G "max_stab" 8 25 "uint8_t"
V G "onlyOnce" 8 26 "uint8_t"
V G "remainder" 8 27 "float"
V G "sum" 8 28 "float"
V G "avg" 8 29 "float"
D G "WEIGHT_OF_OBJECT" 8 32 "14" "20//17"
D G "STABILITY_FACTOR" 8 33 "70"
D G "TOLERANT_VAL" 8 34 "10" "10"
D G "ADD" 8 35 "1"
D G "LIFT" 8 36 "0"
F G "weightINIT" 8 38 "void()"
C L "weightINIT" 8 1 1 "FUNCTION"
F G "readStrainGuage" 8 43 "uint32_t()"
V L "pulse" 8 45 "uint32_t"
V L "i" 8 47 "uint8_t"
F G "calibrateWeight" 8 61 "uint32_t()"
V L "avg" 8 63 "uint32_t"
V L "calIndex" 8 65 "uint32_t"
C L "calibrateWeight" 8 1 1 "FUNCTION"
F G "mode" 8 77 "void()"
V L "mode" 8 79 "uint16_t[100]"
V L "maxValue" 8 79 "uint16_t"
V L "maxCount" 8 80 "uint8_t"
V L "modeIndex" 8 81 "uint8_t"
V L "i" 8 91 "uint8_t"
V L "count" 8 93 "int8"
V L "j" 8 94 "uint8_t"
F G "getRaw" 8 109 "uint32_t()"
C L "Check_Stability" 8 1 53 "FUNCTION"
C L "Check_Stability" 0 15 16 "FUNCTION"
V L "val" 0 45 "int16"
F G "Check_Stability" 0 45 "int8(int16 val)"
V L "i" 0 52 "int8"
F G "Is_True_Weight" 0 63 "uint8_t()"
C L "Is_True_Weight" 0 15 1 "FUNCTION"
V L "temp" 0 68 "uint32_t"
V L "i" 0 69 "uint8_t"
F G "Is_Obj" 0 80 "void()"
C L "Is_Obj" 0 15 1 "FUNCTION"
V L "temp" 0 90 "uint32_t"
C L "Is_Obj" 0 15 1 "FUNCTION"
V L "avg" 0 91 "uint32_t"
V L "sum" 0 92 "uint32_t"
V L "my_stable_val" 0 93 "uint32_t"
V L "i" 0 104 "uint8_t"
F G "MAIN" 0 155 "void()"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 1
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_program_eeprom" 1 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 2
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
